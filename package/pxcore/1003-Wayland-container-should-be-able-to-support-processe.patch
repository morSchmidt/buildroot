From b629b7cc3a115fc9a1b26e5a92fd2c2d47ad884a Mon Sep 17 00:00:00 2001
From: Peter Trekels <peter.trekels@staff.telenet.be>
Date: Thu, 6 Sep 2018 19:33:17 +0200
Subject: [PATCH] Wayland container should be able to support processes
 spawning sub processes (#1429)

* Wayland container should be able to support processes spawning sub processes

Good example of this is WPELauncher. In the initial code on the PID of the
last received status update is stored as the ClientPID. So only this process
gets killed on a destroy call.

* Update pxWayland.cpp
---
 examples/pxScene2d/src/pxWayland.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/examples/pxScene2d/src/pxWayland.cpp b/examples/pxScene2d/src/pxWayland.cpp
index 0cc227b37..10eada3b5 100644
--- a/examples/pxScene2d/src/pxWayland.cpp
+++ b/examples/pxScene2d/src/pxWayland.cpp
@@ -465,7 +465,8 @@ void pxWayland::handleHidePointer( bool hide )
 
 void pxWayland::handleClientStatus( int status, int pid, int detail )
 {
-   mClientPID = status == WstClient_stoppedAbnormal || status == WstClient_stoppedNormal ? -1 : pid;
+   if ( mClientPID <= 0 )
+      mClientPID = ( ( status == WstClient_stoppedAbnormal ) || ( status == WstClient_stoppedNormal ) ) ? -1 : pid;
    if ( mEvents )
    {
       switch ( status )
